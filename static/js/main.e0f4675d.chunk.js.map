{"version":3,"sources":["util/images sync /^/.*/.gif$","util/images sync /^/.*/.jpg$","util/images/beehive.jpg","util/images/block.jpg","util/images/boat.jpg","util/images/loaf.jpg","util/images/tub.jpg","util/images/beacon.gif","util/images/blinker.gif","util/images/glider.gif","util/images/hwss.gif","util/images/lwss.gif","util/images/mwss.gif","util/images/penta_decathlon.gif","util/images/pulsar.gif","util/images/toad.gif","components/Cell.js","components/GameScreen.js","components/Buttons.js","components/Rules.js","components/GridSamples.js","util/samples.js","util/gridCreation.js","App.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Cell","changeCell","cellItem","alive","x","y","className","onClick","GameScreen","grid","row","i","key","Buttons","generations","speed","setSpeed","setPlay","play","updateGrid","clearGrid","nextGen","useState","gridSize","setGridsize","disabled","type","min","max","value","onChange","target","onKeyPress","onTouchEnd","htmlFor","Rules","GridSamples","sampleGen","samples","setSamples","onSampleChange","name","console","log","onSampleGenerate","defaultValue","src","require","alt","block","beehive","loaf","boat","tub","blinker","toad","beacon","pulsar","penta_decathlon","glider","lwss","mwss","hwss","gridCreation","j","col","push","nextGeneration","copyGrid","newGrid","length","liveNeighbours","App","setGridSize","setGrid","setGeneration","useEffect","setTimeout","href","val","newState","sample","hasOwnProperty","location","Math","randomX","floor","random","randomY","loc","sampleCreation","rel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0f4675d.chunk.js","sourcesContent":["var map = {\n\t\"./beacon.gif\": 23,\n\t\"./blinker.gif\": 24,\n\t\"./glider.gif\": 25,\n\t\"./hwss.gif\": 26,\n\t\"./lwss.gif\": 27,\n\t\"./mwss.gif\": 28,\n\t\"./penta_decathlon.gif\": 29,\n\t\"./pulsar.gif\": 30,\n\t\"./toad.gif\": 31\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 7;","var map = {\n\t\"./beehive.jpg\": 18,\n\t\"./block.jpg\": 19,\n\t\"./boat.jpg\": 20,\n\t\"./loaf.jpg\": 21,\n\t\"./tub.jpg\": 22\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 17;","module.exports = __webpack_public_path__ + \"static/media/beehive.a8305e23.jpg\";","module.exports = __webpack_public_path__ + \"static/media/block.778a27f4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/boat.8bce593a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/loaf.ff3f6439.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tub.1b6ff186.jpg\";","module.exports = __webpack_public_path__ + \"static/media/beacon.51a9d85e.gif\";","module.exports = __webpack_public_path__ + \"static/media/blinker.846a46bb.gif\";","module.exports = __webpack_public_path__ + \"static/media/glider.007b1aa9.gif\";","module.exports = __webpack_public_path__ + \"static/media/hwss.3a3e89e5.gif\";","module.exports = __webpack_public_path__ + \"static/media/lwss.65ec31a7.gif\";","module.exports = __webpack_public_path__ + \"static/media/mwss.9b0e8c26.gif\";","module.exports = __webpack_public_path__ + \"static/media/penta_decathlon.17cae0b3.gif\";","module.exports = __webpack_public_path__ + \"static/media/pulsar.122959ef.gif\";","module.exports = __webpack_public_path__ + \"static/media/toad.ca6d20bc.gif\";","import React from \"react\"\r\n\r\n\r\nconst Cell = ({changeCell, cellItem}) => {\r\n\r\n    const  {alive, x, y} = cellItem;\r\n\r\n\r\n    return (\r\n        <div className={`${alive ? \"alive\": ''} cell`} onClick={()=> changeCell({x,y})}>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Cell","import React from 'react';\r\nimport Cell from \"./Cell\";\r\n\r\nfunction GameScreen({grid,changeCell}) {\r\n\r\n    return (\r\n\r\n        <div className=\"game-screen\">\r\n            <div className=\"grid\">\r\n                {   \r\n                    grid.map((row,i) => {\r\n                        return (<div className=\"row\" key={i}>\r\n                            {row.map(cellItem => <Cell key={`${cellItem.y}${cellItem.x}`} cellItem={cellItem} changeCell={changeCell}/>)}\r\n                        </div>)\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default GameScreen","import React, {useState} from 'react';\r\n\r\nfunction Buttons({generations, speed, setSpeed, setPlay, play, updateGrid, clearGrid, nextGen}) {\r\n    \r\n    const [gridSize, setGridsize] = useState(15)\r\n\r\n    const updateGridSize = (e) => {\r\n        setGridsize(e.target.value)\r\n    }\r\n\r\n    const onPlayGen = () => {\r\n        setPlay(!play)\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"buttons\">\r\n\r\n            <p>Generations: {generations}</p>\r\n            <div className=\"actions-container\">\r\n                <button className=\"clear\" onClick={clearGrid}>Clear</button>\r\n\r\n                <button className=\"play\" onClick={onPlayGen}>{play ? 'Pause': 'Play'}</button>\r\n                \r\n                <button className=\"next-gen\" disabled={play} onClick={nextGen}>Next Generation</button>\r\n\r\n            </div>\r\n\r\n            <div className=\"speed-container\">\r\n                <button onClick={()=> setSpeed(speed*2)}>Slower</button>\r\n                <p>Speed: {speed}ms</p>\r\n                <button onClick={()=> setSpeed(speed/2)}>Faster</button>\r\n            </div>\r\n\r\n            <div className=\"range-container\">\r\n                <input \r\n                    disabled={play} \r\n                    type=\"range\" \r\n                    min=\"4\" \r\n                    max=\"50\" \r\n                    value={gridSize} \r\n                    className=\"slider\" \r\n                    id=\"speedRange\" \r\n                    onChange={updateGridSize} \r\n                    onClick={()=> updateGrid(gridSize)} \r\n                    onKeyPress={(e) => { \r\n                        if (e.key === \"Enter\"){\r\n                            updateGrid(gridSize)\r\n                        }\r\n                    }} \r\n                    onTouchEnd={() => updateGrid(gridSize)}\r\n                />\r\n                <label className=\"grid-size\" htmlFor=\"speedRange\">{gridSize} x {gridSize}</label>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Buttons","import React from \"react\";\r\n\r\n\r\nfunction Rules() {\r\n    return (\r\n        <div className=\"rules\">\r\n            <section>\r\n                <h2>Rules</h2>\r\n                <p>The universe of the Game of Life is an infinite, two-dimensional orthogonal grid of square cells, each of which is in one of two possible states, live or dead, (or populated and unpopulated, respectively). Every cell interacts with its eight neighbours, which are the cells that are horizontally, vertically, or diagonally adjacent. At each step in time, the following transitions occur.</p>\r\n                <ol>\r\n                    <li>Any live cell with fewer than two live neighbours dies, as if by underpopulation.</li> \r\n                    <li>Any live cell with two or three live neighbours lives on to the next generation.</li>\r\n                    <li>Any live cell with more than three live neighbours dies, as if by overpopulation.</li>\r\n                    <li>Any dead cell with exactly three live neighbours becomes a live cell, as if by reproduction.</li>\r\n                </ol>\r\n                <p>These rules, which compare the behavior of the automaton to real life, can be condensed into the following.</p>\r\n                <ol>\r\n                    <li>Any live cell with two or three live neighbours survives.</li>\r\n                    <li>Any dead cell with three live neighbours becomes a live cell.</li>\r\n                    <li>All other live cells die in the next generation. Similarly, all other dead cells stay dead.</li>\r\n                </ol>\r\n                <p>The initial pattern constitutes the seed of the system. The first generation is created by applying the above rules simultaneously to every cell in the seed; births and deaths occur simultaneously, and the discrete moment at which this happens is sometimes called a tick. Each generation is a pure function of the preceding one. The rules continue to be applied repeatedly to create further generations.</p>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Rules","import React,{ useState } from \"react\";\r\n\r\n// import block from '../util/images/block.jpg'\r\n\r\n\r\nfunction GridSamples({sampleGen}) {\r\n\r\n    const [samples,setSamples] = useState({'stillLifes':'block', 'oscillators':'blinker','spaceships':'glider'})\r\n\r\n\r\n    function onSampleChange(e) {\r\n        // console.log(e.target.value)\r\n        // setStillLife(e.target.value)\r\n        setSamples({\r\n            ...samples,\r\n            [e.target.name]: e.target.value\r\n        })\r\n        console.log(samples)\r\n    }\r\n\r\n    function onSampleGenerate(e) {\r\n        sampleGen(samples[e.target.value])\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"samples-container\">\r\n            <h2>Sample Generations</h2>\r\n            <div className='sample-options'>\r\n                <div className='sample'>\r\n                    <h3>Still Lifes</h3>\r\n                    <select name=\"stillLifes\" id='stillLifes' defaultValue='block' onChange={onSampleChange}>\r\n                        <option value=\"block\">Block</option>\r\n                        <option value=\"beehive\">Bee-hive</option>\r\n                        <option value=\"loaf\">Loaf</option>\r\n                        <option value=\"boat\">Boat</option>\r\n                        <option value=\"tub\">Tub</option>\r\n                    </select>\r\n\r\n                    <img src={require(`../util/images/${samples['stillLifes']}.jpg`)} alt={`still life ${samples['stillLifes']}`}/>\r\n\r\n                    <button name='still Lifes button' value=\"stillLifes\" onClick={onSampleGenerate}>Generate Still Life</button>\r\n                </div>\r\n                <div className='sample'>\r\n                    <h3>Oscillators</h3>\r\n                    <select name=\"oscillators\" id='oscillators' defaultValue='blinker' onChange={onSampleChange}>\r\n                        <option value=\"blinker\">Blinker</option>\r\n                        <option value=\"toad\">Toad</option>\r\n                        <option value=\"beacon\">Beacon</option>\r\n                        <option value=\"pulsar\">Pulsar</option>\r\n                        <option value=\"penta_decathlon\">Penta-decathlon</option>\r\n                    </select>\r\n\r\n                    <img src={require(`../util/images/${samples['oscillators']}.gif`)} alt={`oscillator ${samples['oscillators']}`}/>\r\n\r\n                    <button name='oscillators button' value=\"oscillators\" onClick={onSampleGenerate}>Generate Oscillator</button>\r\n                </div>\r\n                <div className='sample'>\r\n                    <h3>Spaceships</h3>\r\n                    <select name=\"spaceships\" id='spaceships' defaultValue='glider' onChange={onSampleChange}>\r\n                        <option value='glider'>Glider</option>\r\n                        <option value='lwss'>Light-weight Spaceship</option>\r\n                        <option value='mwss'>Middle-weight Spaceship</option>\r\n                        <option value='hwss'>Heavy-weight Spaceship</option>\r\n                    </select>\r\n\r\n                    <img src={require(`../util/images/${samples['spaceships']}.gif`)} alt={`spaceship ${samples['spaceships']}`}/>\r\n\r\n                    <button name='spaceships button' value=\"spaceships\" onClick={onSampleGenerate}>Generate Spaceship</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default GridSamples","\r\nconst block = {\r\n\r\n    \"x\" : 1,\r\n    \"y\" : 1,\r\n    \"location\": [[0,0],[0,1],[1,0],[1,1]]\r\n}\r\n\r\nconst beehive = {\r\n    \"x\": 3,\r\n    \"y\": 2,\r\n    \"location\": [[0,1],[0,2],[1,0],[1,3],[2,1],[2,2]]\r\n}\r\n\r\nconst loaf = {\r\n    \"x\": 3,\r\n    \"y\": 3,\r\n    \"location\": [[0,1],[0,2],[1,0],[1,3],[2,1],[2,3],[3,2]]\r\n}\r\n\r\nconst boat = {\r\n    \"x\": 2,\r\n    \"y\": 2,\r\n    \"location\": [[0,0],[0,1],[1,0],[1,2],[2,1]]\r\n}\r\n\r\nconst tub = {\r\n    \"x\":2,\r\n    \"y\": 2,\r\n    \"location\": [[0,1],[1,0],[1,2],[2,1]]\r\n}\r\n\r\nconst blinker = {\r\n    \"x\": 2,\r\n    \"y\": 2,\r\n    \"location\": [[0,1],[1,1],[2,1]]\r\n}\r\n\r\nconst toad = {\r\n    \"x\": 3,\r\n    \"y\": 3,\r\n    \"location\": [[1,1],[1,2],[1,3],[2,0],[2,1],[2,2]]\r\n}\r\n\r\nconst beacon = {\r\n    \"x\": 3,\r\n    \"y\": 3,\r\n    \"location\": [[0,0],[0,1],[1,0],[2,3],[3,2],[3,3]]\r\n}\r\n\r\nconst pulsar = {\r\n    \"x\": 15,\r\n    \"y\": 15,\r\n    \"location\": [[1,3],[1,4],[1,5],[1,9],[1,10],[1,11],[3,1],[3,6],[3,8],[3,13],[4,1],[4,6],[4,8],[4,13],[5,1],[5,6],[5,8],[5,13],[6,3],[6,4],[6,5],[6,9],[6,10],[6,11],\r\n                [8,3],[8,4],[8,5],[8,9],[8,10],[8,11],[9,1],[9,6],[9,8],[9,13],[10,1],[10,6],[10,8],[10,13],[11,1],[11,6],[11,8],[11,13],[13,3],[13,4],[13,5],[13,9],[13,10],[13,11]]\r\n}\r\n\r\nconst penta_decathlon = {\r\n    \"x\": 11,\r\n    \"y\": 16,\r\n    \"location\": [[2,3],[2,4],[2,5],[3,4],[4,4],[5,3],[5,4],[5,5],[7,3],[7,4],[7,5],\r\n                [8,3],[8,4],[8,5],[10,3],[10,4],[10,5],[11,4],[12,4],[13,3],[13,4],[13,5]]\r\n}\r\n\r\nconst glider = {\r\n    \"x\": 2,\r\n    \"y\": 2,\r\n    \"location\": [[0,0],[1,1],[1,2],[2,0],[2,1]]\r\n}\r\n\r\nconst lwss = {\r\n    \"x\": 4,\r\n    \"y\": 4,\r\n    \"location\": [[0,0],[0,3],[1,4],[2,0],[2,4],[3,1],[3,2],[3,3],[3,4]]\r\n}\r\n\r\nconst mwss = {\r\n    \"x\": 5,\r\n    \"y\": 6,\r\n    \"location\": [[2,1],[2,2],[2,3],[2,4],[2,5],[3,0],[3,5],[4,5],[5,0],[5,4],[6,2]]\r\n}\r\n\r\nconst hwss = {\r\n    \"x\": 7,\r\n    \"y\": 7,\r\n    \"location\": [[2,1],[2,2],[2,3],[2,4],[2,5],[2,6],[3,0],[3,6],[4,6],[5,0],[5,5],[6,2],[6,3]]\r\n}\r\n\r\nexport default {block, beehive, loaf, boat, tub, blinker, \r\n                toad, beacon, pulsar, penta_decathlon, glider, \r\n                lwss, mwss, hwss}","import samples from \"./samples\";\r\n\r\nfunction gridCreation(gridSize) {\r\n\r\n    const grid = []\r\n      \r\n        for(let i = 0; i < gridSize; i++){\r\n    \r\n            const row = []\r\n            for(let j = 0; j < gridSize; j++){\r\n                \r\n                const col = {'alive': false, 'x' : j,'y' : i}\r\n                row.push(col)\r\n    \r\n            }\r\n    \r\n            grid.push(row)\r\n    \r\n        }\r\n\r\n      return grid\r\n}  \r\n\r\nfunction nextGeneration(grid) {\r\n    \r\n    const copyGrid = [...grid]\r\n    // console.log(copyGrid)\r\n\r\n    const newGrid = []\r\n\r\n    for(let i = 0; i < copyGrid.length; i++){\r\n    \r\n        const row = []\r\n        for(let j = 0; j < copyGrid[i].length; j++){\r\n            \r\n            // const col = {'alive': false, 'x' : j,'y' : i}\r\n            // check the values here and update the cell\r\n            // we only update this cell based on other cells around it\r\n\r\n            \r\n            const col = {'alive': false, 'x' : j,'y' : i}\r\n            \r\n            \r\n            // if there is more than 4 neighbours continue to next j since cell will\r\n            // dead\r\n            // adding up live neighbours\r\n            var liveNeighbours = 0\r\n            // top\r\n            if (i - 1 >= 0 && j-1 >= 0 && copyGrid[i-1][j-1].alive){\r\n\r\n                liveNeighbours += 1\r\n            }\r\n            if (i - 1 >= 0 && copyGrid[i-1][j].alive){\r\n                liveNeighbours += 1\r\n            }\r\n            if ( i - 1 >= 0 && j+1 < copyGrid[i].length && copyGrid[i-1][j+1].alive){\r\n                liveNeighbours += 1\r\n            }\r\n\r\n            // center\r\n            if (j - 1 >= 0&& copyGrid[i][j-1].alive){\r\n                liveNeighbours += 1\r\n            }\r\n\r\n            if (j+1 < copyGrid[i].length && copyGrid[i][j+1].alive){\r\n                liveNeighbours += 1\r\n            }\r\n\r\n            // bottom\r\n            if (i + 1 < copyGrid.length && j-1 >= 0 && copyGrid[i+1][j-1].alive){\r\n                liveNeighbours += 1\r\n            }\r\n            if (i + 1 < copyGrid.length && copyGrid[i+1][j].alive){\r\n                liveNeighbours += 1\r\n            }\r\n            if (i + 1 < copyGrid.length && j+1 < copyGrid[i].length && copyGrid[i+1][j+1].alive){\r\n                liveNeighbours += 1\r\n            }\r\n\r\n            // current cell alive\r\n            if (copyGrid[i][j].alive) {\r\n                \r\n                // two or three live neighbours lives on to the next generation.\r\n                // fewer than two live neighbours dies, as if by underpopulation.\r\n                // more than three live neighbours dies, as if by overpopulation.\r\n                if (liveNeighbours === 2 || liveNeighbours === 3) {\r\n                    // cell keeps living\r\n                    col.alive = true\r\n                }\r\n\r\n            } else {\r\n                // Any dead cell with exactly three live neighbours becomes a live cell, as if by reproduction.\r\n                if (liveNeighbours === 3){\r\n                    col.alive = true\r\n                }\r\n            }\r\n\r\n        \r\n\r\n            row.push(col)\r\n\r\n        }\r\n\r\n        newGrid.push(row)\r\n\r\n    }\r\n\r\n    return newGrid\r\n}\r\n\r\n\r\nfunction sampleCreation(sample, grid,gridSize) {\r\n    // does it matter what sample it is here?\r\n    // sample is the string of what sample it is\r\n    // how would it match the string to the object of the sample\r\n\r\n    // check is sample is in object?\r\n    if (samples.hasOwnProperty(sample)){\r\n\r\n        // get random values on where the sample will be displayed\r\n        // minus the size of the sample\r\n        // console.log(gridSize)\r\n        const {x,y,location} = samples[sample]\r\n        // if grid is smaller than minSize\r\n            // create a new grid with size 2x\r\n        if (gridSize < x || gridSize < y){\r\n            // console.log(\"grid smaller\")\r\n            const minSize = Math.max(x,y)\r\n            gridSize = minSize\r\n\r\n            grid = gridCreation(gridSize)\r\n        }\r\n\r\n        const randomX = Math.floor(Math.random() * (gridSize - x))\r\n        const randomY = Math.floor(Math.random() * (gridSize - y))\r\n\r\n        // console.log(randomX, randomY)\r\n\r\n        // loop over grid\r\n        const newGrid = [...grid]\r\n        \r\n        // loop on location for grid instead and update values\r\n        console.log(\"random\",randomX,randomY)\r\n\r\n        for (const loc of location) {\r\n            console.log(\"location\",loc[0],loc[1])\r\n\r\n            const cell = newGrid[loc[0]+randomY][loc[1]+randomX]\r\n\r\n            cell.alive = true\r\n        }\r\n\r\n        return newGrid\r\n\r\n    } else {\r\n        return grid\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport { gridCreation,nextGeneration, sampleCreation }","import React, { useState, useEffect } from 'react';\nimport GameScreen from './components/GameScreen';\nimport Buttons from './components/Buttons';\nimport Rules from './components/Rules';\nimport GridSamples from './components/GridSamples';\n\nimport{ gridCreation, nextGeneration, sampleCreation } from './util/gridCreation';\n\nimport './App.css';\n\n\n\nfunction App() {\n\n  const [gridSize ,setGridSize] = useState(15);\n  const [grid, setGrid] = useState([[]]);\n  const [play, setPlay] = useState(false);\n  const [generations, setGeneration] = useState(0)\n  const [speed, setSpeed] = useState(200)\n\n  \n  useEffect(()=>{\n    \n    setGrid(gridCreation(gridSize))\n\n  },[gridSize])\n\n  useEffect(()=> {\n\n    play && setTimeout(() => {\n      setGeneration(generations + 1)\n      setGrid(nextGeneration(grid))\n    }, speed);\n\n  },[grid,play])\n\n\n  const changeCell = ({x,y}) => {\n\n    if (!play){\n      const newState = [...grid];\n      newState[y][x].alive = !newState[y][x].alive;\n      setGrid(newState);\n    }\n\n\n  }\n\n\n  const updateGrid = (val) => {\n    setGridSize(val)\n  }\n\n  const clearGrid = () => {\n    setPlay(false)\n\n    setTimeout(() => {\n      setGrid(gridCreation(gridSize))\n      \n      setGeneration(0)\n\n      setSpeed(200)\n    }, speed);\n\n  }\n\n  const nextGen = () => {\n    setGeneration(generations + 1)\n    setGrid(nextGeneration(grid))\n  }\n\n  const sampleGen = (sample) => {\n\n    // sampleCreation(sample,grid,gridSize)\n    setGrid(sampleCreation(sample,grid,gridSize))\n    // console.log('sample gen')\n    \n  }\n\n  return (\n    \n    <div className=\"App\">\n      <header className=\"header\">\n        <h1><a href=\"/\">Game of Life</a></h1>\n      </header>\n\n      <main className=\"content\">\n\n        <Buttons speed={speed} setSpeed={setSpeed} generations={generations} setPlay={setPlay} play={play} gridSize={gridSize} updateGrid={updateGrid} clearGrid={clearGrid} nextGen={nextGen}/>\n\n        <GameScreen grid={grid} changeCell={changeCell}/>\n\n        <GridSamples sampleGen={sampleGen}/>\n\n        <Rules/>\n\n      </main>\n\n      <footer>\n        <small>Created by <a href='https://adrianbparra.com/' target=\"_blank\" rel=\"noopener noreferrer\">adrianbparra.com</a> </small>\n      </footer>\n    </div>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}